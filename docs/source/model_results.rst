==============================
Model Resolution and Results
===============================

The ``Model_Resolution`` module in MicroGridsPy is a comprehensive linear programming solver that facilitates the least-cost sizing of microgrid systems, considering dynamic load demands and capacity expansion over multiple years.

Key Functionalities
-------------------

- **Model Initialization**: Reads configuration from the ``Parameters.dat`` file to set up the optimization model with essential parameters such as renewable penetration, battery independence, investment scenarios, and optimization objectives.

- **Constraint Handling**: Implements a variety of constraints including economic factors like net present cost, operational parameters such as energy balance, and environmental metrics like CO2 emissions.

- **Objective Function Definition**: Depending on the goal—minimizing costs or emissions, or a multi-objective optimization—the appropriate objective function is formulated within the model.

- **Solver Integration**: Configures and connects with solvers like Gurobi or HiGHS to solve the optimization problem, providing flexibility for advanced solver options.

- **Pareto Front Generation**: For multi-objective optimization scenarios, it can compute a Pareto front to visualize the trade-offs between cost and CO2 emissions.


Implementation Highlights
-------------------------

- **MILP Formulations**: The module supports Mixed Integer Linear Programming (MILP), vital for discrete decision-making processes in microgrid planning.

- **Investment Options**: It differentiates between greenfield and brownfield investment scenarios, accommodating various project stages from planning to retrofitting.

- **Partial Load Modeling**: Capable of simulating partial load operations for generators, which is essential for reflecting real-world operational constraints.

- **Component Flexibility**: The module can model different microgrid components like renewable energy sources, storage systems, and conventional generators.


Usage
-----

The module is crafted to function as a part of a larger microgrid optimization framework but can also be invoked independently for targeted analysis.

.. code-block:: python

   from Model_Resolution import Model_Resolution
   
   # Define the path to the data file
   datapath = 'path_to/Parameters.dat'
   
   # Initialize and solve the optimization model
   instance = Model_Resolution(model, datapath)


Insights
--------

The solutions generated by the ``Model_Resolution`` module are instrumental in the strategic deployment of microgrid systems. They provide a balanced approach to economic efficiency, reliability, and environmental considerations, essential for sustainable energy system development.

